Algorithm 1 Centroid Decomposition and Centroid Tree
Initially set currentLV = 0
CENTROID-DECOMPOSITION(T,currentLV ,v^previousLV_c)
currentLV = currentLV + 1
Compute the centroid v_c of T (if there is two centroids,then randomly pick one)
v_c .lv = currentLV
Decompose T into several subtrees (T´_j)s by removing v_c from T
V (T_c) = V (T_c) ∪ {v_c}
if vc.lv != 1 then
	E(T_c) = E(T_c) ∪ {(v_c, v^previousLV_c)}
end if
for each subtree T_j do
	if |Tk| > 1 then
		CENTROID-DECOMPOSITION(T_j ,currentLV ,v_c)
	else
		v.lv = currentLV + 1, ∀v ∈ V (T_j)
		V (T_c) = V (T_c) ∪ {v}
		E(T_c) = E(T_c) ∪ {(v, v^previousLV_c)}
	end if
end for