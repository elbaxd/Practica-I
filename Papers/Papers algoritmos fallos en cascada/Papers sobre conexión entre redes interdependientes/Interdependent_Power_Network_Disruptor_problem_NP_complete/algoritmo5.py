# -*- coding: utf-8 -*-
"""Algoritmo5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-TpugsHAQSlIefxIQ_AOL0nX3_7PM_Iq
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
!pip install igraph

import igraph as ig
import matplotlib.pyplot as plt

# Esqueleto

# Gs es el grafo de la red S
# Gc es el grafo de la red C
# Esc son las aristas que conectan ambas redes
# Se obtiene el set de nodos atacados o que fallan de manera iterativa.
def maxCas(Gs,Gc,Esx):
    T = [] # T es el set de nodos criticos de Vs, con Vs los vertices de S

    for i in (len(k)-1):
        # As y Ac son los set de nodos de articulación de Gs y Gc, respectivamente
        As = articulation_points(Gs)
        Ac = articulation_points(Gc)
        A = [] # nodo u que esta en Vs tal que u esté en As o ((u,v) este en Esc y v esté en Ac)
        ###
        for u in vertices(Gs):
            if u in As or (v in Ac and (u,v) in Esc):
              A.append(u)
        ###
        if A != None:
            u = argmax max-Cas(Gs,T,{u}) # Esta funcion max-Cas es diferente a esta misma función maxCas
            T.append({u}) # Se agrega el nodo u a T
        else:
            # Se elige cualquier nodo de Vs\T para que sea u
            n = random(len(Vs\T))
            u = Vs\T[n]
        Update J[Vs\T]
    return T

# Esqueleto

# M es la matriz de caracterizacion
# e error allowed

def IIC(M,e):
    x = 1
    error = -infinite # ??? hay que ver como reemplazar esto
    while error > e:
      y = M*x
      norm = ||y||
      y = y/norm
      error = ||y-x||
      x = y
    return x # lo que retorna sería el centrality vector

# Esqueleto

# J es un sistema interdependiente Gs, Gc y Esc
# K es un entero

def IICBased(J,k):
    T = []
    for i=1 to k:
        a = 0.5 
        # Computar M
        e = 10^(-8)
        x = ICC(M,e)

        u = argmax x[u]
        T.append({u}) # Se agrega el nodo u a T
        Update J[Vs\T]
    return T # Retorna el set de nodos criticos de Vs

# Esqueleto

# J es un sistema interdependiente Gs, Gc y Esc
# K es un entero

def Hybrid(J,k):
    T = []
    for i=1 to k:
        if i is odd:
            Select u as Max-Cas algorithm
        else:
            Select u as IIC algorithm
        
        T = T + [u] # Se agrega el nodo u a T
        Update J[Vs\T]
    return T

# Quinto algoritmo innecesario de momento, posible implementación luego